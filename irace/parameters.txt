# Parameter model for ACOVRP
# name                switch     type      values             [conditions (using R syntax)]
#
#
# Selectors
#
selector				"--"					c	(selector-standard,selector-dorigo,selector-maniezzo)
alpha					"--alpha "				r	(0.1,5.0)	| selector %in% c("selector-standard","selector-dorigo")
beta					"--beta "				r	(0.1,5.0)	| selector %in% c("selector-standard","selector-dorigo")
alpha_maniezzo			"--alpha "				r 	(0.0,1.0)	| selector == "selector-maniezzo"
dorigo_probability		"--dorigo-probability " r	(0.0,1.0)	| selector == "selector-dorigo"
#
#
# General
#
candidate_list			"--"					c	(candidate-yes,candidate-no)
candidate_ratio			"--candidate-ratio  "		r	(0.0,1.0)		| candidate_list == "candidate-yes"
global_update			"--"					c	(ant-s,ant-colony-s,min-max-s,rank-based-ant-s,elitist-ant-s,best-worst-ant-s)
local_update			"--"					c	(local-update-yes,local-update-no) | selector %in% c("selector-standard","selector-dorigo")
iterated_greedy			"--"					c	(standard,external-memory,iterated-ants,cunning-ants)
ant_num					"--ant-num "			i	(1,50)
runtime					"--runtime "			—Å	(1000)
#
#
# PROPOSITION - PERFORM PRECOMPUTATION ALWAYS OR TO SEPARATEDLY STORE H^BETA
#
#
# Local update
#
lupd_epsilon			"--lupd-epsilon "		r	(0.0,1.0)	| local_update == "local-update-yes"
lupd_tau0				"--tau0 "				r   (0.0,1.0)  | local_update == "local-update-yes"
#
#
# Local search
#
local_search			"--"					c	(local-search-none,local-search-ils-twohalf,local-search-twohalf)
ils_iterations			"--ils-iterations "		i	(1,30)		| local_search	== "local-search-ils-twohalf"
#
#
#
#
#------------------------------------------------------------------------------------------------------
#
# Global update (all)
#
evaporation_remains		"--evaporation-remains "	r	(0.2,1.0)
#
#
# Ant System
#
ant_s_is_bounded		"--"					c	(ant-s-bounded-yes,ant-s-bounded-no) | global_update == "ant-s"	
ant_s_k					"--ant-s-k "			r	(1.0,10.0)	| (global_update == "ant-s") & (ant_s_is_bounded == "ant-s-bounded-yes")
#
#
# Ant Colony System
# No additional parameters for ACS
# TODO constrain ACS
#
#
# Min Max Ant System
#
min_max_s_p_best			"--min-max-s-p-best "	r	(0.01,1.0)	| global_update == "min-max-s"
min_max_s_global_best		"--"					c	(min-max-s-global-best-yes,min-max-s-global-best-no) |  global_update == "min-max-s"
min_max_s_global_iterations	"--min-max-s-global-iterations "	i	(1,30) | (global_update == "min-max-s") & (min_max_s_global_best == "min-max-s-global-best-yes")
min_max_s_pts				"--"					c	(min-max-s-pts-yes,min-max-s-pts-no) | global_update == "min-max-s"
min_max_s_pts_iterations	"--min-max-s-global-iterations "	i	(1,30) | (global_update == "min-max-s") & (min_max_s_pts == "min-max-s-pts-yes")
#
#
# PTS (for MMAS only)
#
# MAYBE MAKE SMALLER???
pts_lambda					"--pts-lambda "			r	(0.0,1.0)	| (global_update == "min-max-s") & (min_max_s_pts == "min-max-s-pts-yes")
pts_ratio					"--pts-ratio "			r	(0.0,1.0)	| (global_update == "min-max-s") & (min_max_s_pts == "min-max-s-pts-yes")
pts_delta					"--pts-delta "			r	(0.0,1.0)	| (global_update == "min-max-s") & (min_max_s_pts == "min-max-s-pts-yes")
#
#
# Rank Based Ant System
#
ras_w						"--ras-w "				i	(1,30)		| global_update == "rank-based-ant-s"
ras_is_bounded				"--"					c	(ras-bounded-yes,ras-bounded-no)	| global_update == "rank-based-ant-s"
ras_k						"--ras-k "				r	(1.0,10.0)	| global_update == "rank-based-ant-s"
#
#
# Elitist Ant System
#
eas_m_elite					"--eas-m-elite "		i	(1, 100)	| global_update == "elitist-ant-s"
eas_is_bounded				"--"					c	(eas-bounded-yes,eas-bounded-no)	| global_update == "elitist-ant-s"
eas_k						"--eas-k "				r	(1.0,10.0) | global_update == "elitist-ant-s"
#
#
# Best-Worst Ant System
#
bwas_mutation_probability	"--bwas-mutation-probability"	r	(0.0,1.0)	|	global_update == "best-worst-ant-s"
#
#
#---------------------------------------------------------------------------------------------------------------------
#
#
#
# Pheromone initialization/retinitalization
#
# MAKE OVERLAPPING RANGES?
pheromone_min				"--pheromone-min "		r	(0.1,5.0)
pheromone_max				"--pheromone-max "		r	(5.1,10.0)
reinitialization			"--"					c	(reinitialization-yes,reinitialization-no)
reinitialization_time		"--reinitialization-time "	i	(300,5000)	| reinitialization == "reinitialization-yes"
#
# Nothing in standard and cunning ants heuristics
#
# External memory
#
top_k						"--top-k "				i	(1,5)	|	iterated_greedy == "external-memory"
memory_size					"--memory-size "		i	(10,30)	|	iterated_greedy == "external-memory"
tournament_selector_size	"--tournament_selector_size "	i	(2,10)	|	iterated_greedy == "external-memory"
# TODO ensure topK and memorySize constraints
#
#
# Iterated ants
#
criteria					"--"	c	(iterated-criteria-best,iterated-criteria-probabilistic)	|	iterated_greedy	== "iterated-ants"
probabilistic_best			"--probabilistic-best "	r	(0.0,1.0)	|	(iterated_greedy == "external-memory") & (criteria == "iterated-criteria-probabilistic")
#
#
# Solution destroyer (only SolutionDestroyerVrpRandom is considered)
#
destruction_probability		"--destruction-probability "	r	(0.0,1.0)	|	iterated_greedy %in% c("external-memory","iterated-ants","cunning-ants")
